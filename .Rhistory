library(MASS
data()
library(MASS)
data()
ls()
phones
plot(phones$year, phones$calls)
install.packages("rggobi")
library(MASS)
attach(phones)
plot(year, calls)
library(MASS)
attach(phones)
plot(year, calls)
identity(year, calls, labels=row.names(phones))
row.names(phones)
library(MASS)
library(rggobi)
g<-ggobi(phones)
attach(phones)
plot(year, calls)
library(MASS)
library(rggobi)
g<-ggobi(phones)
attach(phones)
plot(year, calls)
library(MASS)
library(rggobi)
g<-ggobi(phones)
attach(phones)
plot(year, calls)
library(MASS)
library(rggobi)
g<-ggobi(phones)
attach(phones)
plot(year, calls)
install.packages("iplots")
library(MASS)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
install.packages("imosaic")
install.packages("mosaic")
library(MASS)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
library(MASS)
library(iplot)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
library(MASS)
library(iplots)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
library(MASS)
library(iPlots)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
library()
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
imosaic(data.frame(AirBags,Cylinders,Origin))
??imosaic
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
ibar(Cylinders)
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
ibar(Cylinders)
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
ibar(Cylinders)
install.packages("iplots")
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
ibar(Cylinders)
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
install.packages("rJava")
source('C:/Users/mahmood/Desktop/ex.R')
install.packages("rJava")
library(iplots)
library(MASS)
data(Cars93)
attach(Cars93)
ibar(Cylinders)
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
source('C:/Users/mahmood/Desktop/ex.R')
install.packages("XML")
source('C:/Users/mahmood/Desktop/ex.R')
install.packages("SVGAnnotation")
source("http://bioconductor.org/biocLite.R")
biocLite("SVGAnnotation")
source('C:/Users/mahmood/Desktop/ex.R')
ls ()
pwd()
data = c(5.17, 5.30)
data
mean (data)
sd (data)
var (data)
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('~/.active-rstudio-document')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
a="amw12"
nchar(a)
as.numeric(gsub("\\D", "", a))
a="13amw12"
as.numeric(gsub("\\D", "", a))
a="amw"
as.numeric(gsub("\\D", "", a))
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
df = data.frame (Domain=character(0), Owner=character(0),	"Owner Email"=character(0),
Origin=character(0))
df
source('~/.active-rstudio-document')
df
source('C:/Dropbox/data_science/devel/get_domain_data.R')
df
warnings()
source('~/.active-rstudio-document')
source('C:/Dropbox/data_science/devel/get_domain_data.R')
df
today
date
date()
as.character(date())
as.character(date(MMDDYY))
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%a %b %d %X")
format(Sys.time(), "%a %b %d")
format(Sys.time(), "%a %b %d %Y")
format(Sys.time(), "%b %d %Y")
fname = paste = ('C:\Dropbox\Shahbaz\Domains_', format(Sys.time(), "%b %d %Y"), '.xlsx')
fname = paste = ('C:\\Dropbox\\Shahbaz\\Domains_', format(Sys.time(), "%b %d %Y"), '.xlsx')
fname = paste ('C:\\Dropbox\\Shahbaz\\Domains_', format(Sys.time(), "%b %d %Y"), '.xlsx')
fname
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("xlsx")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("rJava")
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/data_science/devel/get_domain_data.R')
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/data_science/devel/get_domain_data.R', echo=TRUE)
gurl = "http://reports.internic.net/cgi/whois?whois_nic=DVAR&type=domain"
data = read.csv(file="C:\Dropbox\Shahbaz\ Oct 28 2013 .csv")
gurl = "http://reports.internic.net/cgi/whois?whois_nic=DVAR&type=domain"
data = read.csv(file='C:\\Dropbox\\Shahbaz\\ Oct 28 2013 .csv')
data
data$Domain
domains = as.character(data$Domain)
domains
for (d in domains) {
print (d)
}
for (d in domains) {
url = sub("DVAR", d, gurl)
print (url)
}
for (d in domains) {
url = sub("DVAR", d, gurl)
tbl = readHTMLTable (url, as.data.frame=T)
print (tbl)
}
for (d in domains) {
url = sub("DVAR", d, gurl)
#tbl = readHTMLTable (url, as.data.frame=T)
print (url)
}
url.show("http://lib.stat.cmu.edu/datasets/csb/ch11b.txt")
url.show("http://www.whois.com/whois/duruclover.com")
scan.url("http://www.whois.com/whois/duruclover.com")
thepage = readLines('http://calbears.cstv.com/sports/m-basebl/sched/cal-m-basebl-sched.html')
thepage
thepage = readLines('http://www.whois.com/whois/duruclover.com')
thepage
fix(thepage)
domains
thepage <- getURL("http://www.whois.com/whois/duruclover.com")
thepage
thepage <- getURL("http://www.whois.com/whois/nasirmaan.com")
thepage
fix(thepage)
grep ('+49', thepage)
grep ('+92', thepage)
grep ('Nasir', thepage, value=T)
grepl ('Nasir', thepage)
grepl ('+49', thepage)
grepl ('+92', thepage)
grepl ('92.', thepage)
grepl ('92\.', thepage)
grepl ('92\\.', thepage)
grepl ('49\\.', thepage)
grepl ('\\+49\\.', thepage)
grepl ('\\+92\\.', thepage)
for (d in domains) {
url = sub("DVAR", d, gurl)
thepage <- getURL(url)
hit = grepl ('\\+1\\.', thepage)
if (hit) {
print (url)
}
#tbl = readHTMLTable (url, as.data.frame=T)
#print (url)
}
for (d in domains) {
url = sub("DVAR", d, gurl)
thepage <- getURL(url)
hit = grepl ('\\+1\\.', thepage)
print (hit)
if (hit) {
print (url)
}
#tbl = readHTMLTable (url, as.data.frame=T)
#print (url)
}
url = paste("http://www.whois.com/whois/", d)
thepage <- getURL(url)
thepage
url
url = paste("http://www.whois.com/whois/", d, sep='')
thepage <- getURL(url)
thepage
source('~/.active-rstudio-document', echo=TRUE)
library(stringr)
str_locate("aaa12xxx", "[0-9]+")
install.packages("stringr")
library(stringr)
str_locate("aaa12xxx", "[0-9]+")
thepage <- getURL("http://www.whois.com/whois/nasirmaan.com")
grepl ('\\+49\\.', thepage)
str_locate (thepage, "[\\+\d+]\\.")
str_locate (thepage, "[\\+\\d+]\\.")
thepage[2990:2991]
thepage[2990]
class(thepage)
thepage[[2990]
]
str_extract (thepage, "[\\+\\d+]\\.")
str_extract (thepage, "[\\+[0-9]+\\.")
str_extract (thepage, "[\\+[0-9]\\.")
str_extract (thepage, "[\\[+0-9]\\.")
str_extract (thepage, "\\+[0-9]\\.")
str_extract (thepage, "\\+[0-9]+\\.")
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Dropbox/devel/domain_scrapper/get_contact_info.R')
thepage <- getURL("http://www.whois.com/whois/acorpsperdu.com")
thepage
str_extract (thepage, "\\+[0-9]+\\.")
source('C:/Dropbox/devel/domain_scrapper/get_contact_info.R', echo=TRUE)
thepage <- getURL("http://www.whois.com/whois/aislerun.com")
str_extract (thepage, "\\+[0-9]+\\.")
str_extract (thepage, "Country")
str_extract (thepage, "Country []\n")
str_extract (thepage, "Country [.*]\n")
str_extract (thepage, "Country [.*]\\n")
str_extract (thepage, "Country[.*]\\n")
str_extract (thepage, "Country[.*]")
str_extract (thepage, "Country[\w+]")
str_extract (thepage, "Country[a-zA-Z]")
str_extract (thepage, "Country:\s[.*]")
str_extract (thepage, "Country: [.*]")
sub(".*?Country:(.*?) .*", "\\1", thepage)
sub(".*?Country:(.*?)Tech.*", "\\1", thepage)
sub(".*?Country:(.*?)<.*", "\\1", thepage)
source('C:/Dropbox/devel/domain_scrapper/get_contact_info.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
thepage <- getURL("http://www.whois.com/whois/aislerun.com")
str_extract (thepage, "Country:\s[.*]")
str_extract (thepage, "Country:\s[.*]")
sub(".*?Country:(.*?)<.*", "\\1", thepage)
grepl("United States", thepage)
grepl("US", thepage)
source('C:/Dropbox/devel/domain_scrapper/get_contact_info.R', echo=TRUE)
source('~/.active-rstudio-document')
source('C:/Dropbox/devel/domain_scrapper/get_contact_info.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
thepage <- getURL("http://www.whois.com/whois/abbca.com")
grepl("United States", thepage)
str_extract (thepage, "\\+[0-9]+\\.")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
library (RCurl)
library (XML)
dns_url = "http://www.dailychanges.com/new-domains/"
tbl = readHTMLTable (dns_url, as.data.frame=TRUE)
dns = as.character(unlist(tbl[[1]][,1]))
dns
url = paste ("http://www.dailychanges.com/", "22.CN", sep='')
url
tbl[[1]][,1]
tbl[[2]]
tbl
tbl = readHTMLTable (url, as.data.frame=T)
tbl
tbl[[1]]
url
tbl[[2]]
tbl[[1]]
tbl2 = readHTMLTable (url, as.data.frame=T)
tbl2
CN = c ("DNSPOD.NET", "HICHINA.COM", "51DNS.COM", "DNSEVER.COM", "IIDNS.COM", "DNS-DIY.COM",
"MYHOSTADMIN.NET", "NATROHOST.COM", "22.CN", "EZDNSCENTER.COM", "ISIMTESCIL.NET")
CN
"DNSPOD.NET" %IN% CN
"DNSPOD.NET" %in% CN
"DNSPOD.NE" %in% CN
"DNSPOD.NE" !%in% CN
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R', echo=TRUE)
dm = "www.nasirmaan.com"
strsplit(dm, ' ')
strsplit(dm, '.')
strsplit(dm, "[.]")
tail(strsplit(dm, "[.]"))
tail(strsplit(dm, "[.]"))[-1]
strsplit(dm, "[.]")[-1]
strsplit(dm, "[.]")[[-1]]
unlist(strsplit(dm, "[.]"))[=1]
unlist(strsplit(dm, "[.]"))[-11]
unlist(strsplit(dm, "[.]"))[-1]
unlist(strsplit(dm, "[.]"))
class(unlist(strsplit(dm, "[.]")))
unlist(strsplit(dm, "[.]"))[2]
unlist(strsplit(dm, "[.]"))[3]
tail(unlist(strsplit(dm, "[.]")))
tail(strsplit(dm, "[.]"), n=1)
tail(unlist(strsplit(dm, "[.]")), n=1)
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R', echo=TRUE)
source('C:/Dropbox/devel/domain_scrapper/get_domain_data.R')
~/
cd
pwd
cd
getwd
library(RCurl)
# Set SSL certs globally
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
require(twitteR)
require(wordcloud)
require(igraph)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "hvjO4S6bS1Oq0pO9X6QLRg"
consumerSecret <- "vj2f9DmC6rgws0DLgbus5QgKJuFPFXQ6I0ExYIb0"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
q()
?matrix
matrix (list(c(0,1), c(2,3)))
matrix (c(0,1), c(2,3))
matrix (c(0,1, 2,3))
matrix (c(0,1, 2,3), 2, 2)
a = matrix (c(0,19, 0, 0, 95,
0, 0, 48, 0, 0,
0, 21, 50, 33, 0,
55, 3, 1, 0, 0,
78, 81, 0, 67, 31), 5, 5)
a
b = matrix (c(0, 0, 83, 48, 98,
73, 0, 12, 85, 7,
0, 82, 0, 18, 0,
0, 0, 57, 24, 0,
42, 0, 0, 0, 3), 5, 5)
b
help.search("matrix multiplication")
a %*% b
x = c(0:5
)
x
c(0:5, .1)
c(0:1, .1)
px = c(0, .1, 2., .4, .1, .2)
sum(px)
px
px = c(0, .1, .2, .4, .1, .2)
sum(px)
x * px
sum (x * px)
rep(x, c(10, 20, 40, 10, 20))
rep(x, c(10, 20, 40, 10, 20))
rep(x, 1
)
sum(((x - 3.1)^2) * px)
sqrt(sum(((x - 3.1)^2) * px))
sqrt(1.49)
pnorm(.85, 1, .1)
pnorm(.85, 1, .1) * 100
qnorm(.85, 1, .1) * 100
qnorm(.85, 1, .1)
pnorm(.85, 1, .1)
pnorm(1.15, 1, .1, lower.tail = F)
1 - pnorm(1.15, 1, .1)
choose(5, 4)
choose(4, 5)
choose(49, 6)
lchoose(49, 6)
lchoose(5, 4)
choose(5, 4)
1 / choose(5, 4)
factorial(5) / factorial(4)
pbinom(4, 5, .513)
qnorm(.25, 80, 10)
qnorm(.5, 80, 10)
qnorm(.75, 80, 10)
pbinom(2, 8, .05)
choose(6, 4)
1/15
1/6
choose(6, 3)
choose(6, 3)1/20
1/20
(1000000 * .05) + (0.95 * -50)
require(caret)
library(ggbiplot)
setwd("C:/Dropbox/datasci-jhi/machinelearning/course_project/")
data <- read.csv("pml-training.csv", stringsAsFactor=F)
require(caret)
library(ggbiplot)
setwd("C:/Dropbox/datasci-jhi/machinelearning/course_project/")
data <- read.csv("pml-training.csv", stringsAsFactor=F)
data$classe <- as.factor(data$classe)
excl = vector()
for (i in 1:159) {
if ((class(data[, i]) == "character") | (sum(is.na(data[, i])) > 19000)) {
excl = append(excl, i)
}
if (class(data[, i]) == "integer"){
data[, i] = as.numeric(data[, i])
}
}
data = data[-excl]; ncol = ncol(data)
inTrain <- createDataPartition(y=data$classe, p=0.75, list=F)
trainData <- data[inTrain, ]
testData <- data[-inTrain, ]
rf <-randomForest(classe~.,data=trainData, mtry=2, ntree=1000,
keep.forest=TRUE, importance=TRUE)
library(randomForest)
rf <-randomForest(classe~.,data=trainData, mtry=2, ntree=1000,
keep.forest=TRUE, importance=TRUE)
pr = predict(rf, testData)
t = table (obs=testData$classe, predict=pr)
prop.table(t)
round(prop.table(t), 2)
t
prop.table(t, testData)
prop.table(t)
prop.table(t, 1)
prop.table(t)
prop.table(t, 1)
round(prop.table(t, 1), 2)
round(prop.table(t, 1), 5)
round(prop.table(t, 1), 3)
